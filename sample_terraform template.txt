# We're using AWS cloud provider and hosting in us-east-1 (virginia region)
provider "aws" {
  region = "us-east-1"
}

# lets define the variables.
variable "web_instance_type" {
  description = "Web server instance type"
  default     = "t3.large"
}

variable "app_instance_type" {
  description = "Application server instance type"
  default     = "r5.xlarge"
}

variable "db_instance_type" {
  description = "Database server instance type"
  default     = "x2idn.24xlarge"
}

# lets create VPC
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
}

# lets create subnet for web server
resource "aws_subnet" "web_subnet" {
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = "10.0.1.0/24"
  availability_zone       = "us-east-1a"
}

# lets create subnet for application servers
resource "aws_subnet" "app_subnet" {
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = "10.0.2.0/24"
  availability_zone       = "us-east-1b"
}

# lets create subnet for database servers
resource "aws_subnet" "db_subnet" {
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = "10.0.3.0/24"
  availability_zone       = "us-east-1c"
}

# lets create SG for web server.
resource "aws_security_group" "web_sg" {
  name        = "web_server_sg"
  description = "Security group for web server"
  vpc_id      = aws_vpc.my_vpc.id
  
  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# lets create SG for application servers
resource "aws_security_group" "app_sg" {
  name        = "app_servers_sg"
  description = "Security group for application servers"
  vpc_id      = aws_vpc.my_vpc.id
  
  ingress {
    from_port   = 8080
    to_port     = 8080
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# lets create security group for database servers.
resource "aws_security_group" "db_sg" {
  name        = "db_servers_sg"
  description = "Security group for database servers"
  vpc_id      = aws_vpc.my_vpc.id
  
  ingress {
    from_port   = 3306
    to_port     = 3306
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# lets create Windows web server
resource "aws_instance" "web_server" {
  ami           = "ami-xxxxxxxx" 
  instance_type = var.web_instance_type
  subnet_id     = aws_subnet.web_subnet.id
  key_name      = "your_key_pair_name"
    security_group_ids = [aws_security_group.web_sg.id]

  root_block_device {
    volume_type           = "gp3"
    volume_size           = 1000
    delete_on_termination = true
  }
}

# lets create SLES for SAP application servers 15 SP2.
resource "aws_instance" "app_servers" {
  count         = 2
  ami           = "ami-xxxxxxxx" 
  instance_type = var.app_instance_type
  subnet_id     = aws_subnet.app_subnet.id
  key_name      = "your_key_pair_name"
  security_group_ids = [aws_security_group.app_sg.id]

root_block_device {
    volume_type           = "gp3"
    volume_size           = 180
    delete_on_termination = true
  }
}

# lets create SLES for SAP database servers 15 SP2.
resource "aws_instance" "db_servers" {
  count         = 2
  ami           = "ami-xxxxxxxx"  
  instance_type = var.db_instance_type
  subnet_id     = aws_subnet.db_subnet.id
  key_name      = "your_key_pair_name"
  security_group_ids = [aws_security_group.db_sg.id]

  root_block_device {
    volume_type           = "gp3"
    volume_size           = 250
    delete_on_termination = true
  }
}

